import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { CreateAssistantAssociationCommandInput, CreateAssistantAssociationCommandOutput } from "./commands/CreateAssistantAssociationCommand";
import { CreateAssistantCommandInput, CreateAssistantCommandOutput } from "./commands/CreateAssistantCommand";
import { CreateContentCommandInput, CreateContentCommandOutput } from "./commands/CreateContentCommand";
import { CreateKnowledgeBaseCommandInput, CreateKnowledgeBaseCommandOutput } from "./commands/CreateKnowledgeBaseCommand";
import { CreateSessionCommandInput, CreateSessionCommandOutput } from "./commands/CreateSessionCommand";
import { DeleteAssistantAssociationCommandInput, DeleteAssistantAssociationCommandOutput } from "./commands/DeleteAssistantAssociationCommand";
import { DeleteAssistantCommandInput, DeleteAssistantCommandOutput } from "./commands/DeleteAssistantCommand";
import { DeleteContentCommandInput, DeleteContentCommandOutput } from "./commands/DeleteContentCommand";
import { DeleteKnowledgeBaseCommandInput, DeleteKnowledgeBaseCommandOutput } from "./commands/DeleteKnowledgeBaseCommand";
import { GetAssistantAssociationCommandInput, GetAssistantAssociationCommandOutput } from "./commands/GetAssistantAssociationCommand";
import { GetAssistantCommandInput, GetAssistantCommandOutput } from "./commands/GetAssistantCommand";
import { GetContentCommandInput, GetContentCommandOutput } from "./commands/GetContentCommand";
import { GetContentSummaryCommandInput, GetContentSummaryCommandOutput } from "./commands/GetContentSummaryCommand";
import { GetKnowledgeBaseCommandInput, GetKnowledgeBaseCommandOutput } from "./commands/GetKnowledgeBaseCommand";
import { GetRecommendationsCommandInput, GetRecommendationsCommandOutput } from "./commands/GetRecommendationsCommand";
import { GetSessionCommandInput, GetSessionCommandOutput } from "./commands/GetSessionCommand";
import { ListAssistantAssociationsCommandInput, ListAssistantAssociationsCommandOutput } from "./commands/ListAssistantAssociationsCommand";
import { ListAssistantsCommandInput, ListAssistantsCommandOutput } from "./commands/ListAssistantsCommand";
import { ListContentsCommandInput, ListContentsCommandOutput } from "./commands/ListContentsCommand";
import { ListKnowledgeBasesCommandInput, ListKnowledgeBasesCommandOutput } from "./commands/ListKnowledgeBasesCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { NotifyRecommendationsReceivedCommandInput, NotifyRecommendationsReceivedCommandOutput } from "./commands/NotifyRecommendationsReceivedCommand";
import { PutFeedbackCommandInput, PutFeedbackCommandOutput } from "./commands/PutFeedbackCommand";
import { QueryAssistantCommandInput, QueryAssistantCommandOutput } from "./commands/QueryAssistantCommand";
import { RemoveKnowledgeBaseTemplateUriCommandInput, RemoveKnowledgeBaseTemplateUriCommandOutput } from "./commands/RemoveKnowledgeBaseTemplateUriCommand";
import { SearchContentCommandInput, SearchContentCommandOutput } from "./commands/SearchContentCommand";
import { SearchSessionsCommandInput, SearchSessionsCommandOutput } from "./commands/SearchSessionsCommand";
import { StartContentUploadCommandInput, StartContentUploadCommandOutput } from "./commands/StartContentUploadCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateContentCommandInput, UpdateContentCommandOutput } from "./commands/UpdateContentCommand";
import { UpdateKnowledgeBaseTemplateUriCommandInput, UpdateKnowledgeBaseTemplateUriCommandOutput } from "./commands/UpdateKnowledgeBaseTemplateUriCommand";
import { WisdomClient } from "./WisdomClient";
export declare class Wisdom extends WisdomClient {
        createAssistant(args: CreateAssistantCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssistantCommandOutput>;
    createAssistant(args: CreateAssistantCommandInput, cb: (err: any, data?: CreateAssistantCommandOutput) => void): void;
    createAssistant(args: CreateAssistantCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssistantCommandOutput) => void): void;
        createAssistantAssociation(args: CreateAssistantAssociationCommandInput, options?: __HttpHandlerOptions): Promise<CreateAssistantAssociationCommandOutput>;
    createAssistantAssociation(args: CreateAssistantAssociationCommandInput, cb: (err: any, data?: CreateAssistantAssociationCommandOutput) => void): void;
    createAssistantAssociation(args: CreateAssistantAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAssistantAssociationCommandOutput) => void): void;
        createContent(args: CreateContentCommandInput, options?: __HttpHandlerOptions): Promise<CreateContentCommandOutput>;
    createContent(args: CreateContentCommandInput, cb: (err: any, data?: CreateContentCommandOutput) => void): void;
    createContent(args: CreateContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateContentCommandOutput) => void): void;
        createKnowledgeBase(args: CreateKnowledgeBaseCommandInput, options?: __HttpHandlerOptions): Promise<CreateKnowledgeBaseCommandOutput>;
    createKnowledgeBase(args: CreateKnowledgeBaseCommandInput, cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void): void;
    createKnowledgeBase(args: CreateKnowledgeBaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void): void;
        createSession(args: CreateSessionCommandInput, options?: __HttpHandlerOptions): Promise<CreateSessionCommandOutput>;
    createSession(args: CreateSessionCommandInput, cb: (err: any, data?: CreateSessionCommandOutput) => void): void;
    createSession(args: CreateSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSessionCommandOutput) => void): void;
        deleteAssistant(args: DeleteAssistantCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssistantCommandOutput>;
    deleteAssistant(args: DeleteAssistantCommandInput, cb: (err: any, data?: DeleteAssistantCommandOutput) => void): void;
    deleteAssistant(args: DeleteAssistantCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssistantCommandOutput) => void): void;
        deleteAssistantAssociation(args: DeleteAssistantAssociationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAssistantAssociationCommandOutput>;
    deleteAssistantAssociation(args: DeleteAssistantAssociationCommandInput, cb: (err: any, data?: DeleteAssistantAssociationCommandOutput) => void): void;
    deleteAssistantAssociation(args: DeleteAssistantAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAssistantAssociationCommandOutput) => void): void;
        deleteContent(args: DeleteContentCommandInput, options?: __HttpHandlerOptions): Promise<DeleteContentCommandOutput>;
    deleteContent(args: DeleteContentCommandInput, cb: (err: any, data?: DeleteContentCommandOutput) => void): void;
    deleteContent(args: DeleteContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteContentCommandOutput) => void): void;
        deleteKnowledgeBase(args: DeleteKnowledgeBaseCommandInput, options?: __HttpHandlerOptions): Promise<DeleteKnowledgeBaseCommandOutput>;
    deleteKnowledgeBase(args: DeleteKnowledgeBaseCommandInput, cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void): void;
    deleteKnowledgeBase(args: DeleteKnowledgeBaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void): void;
        getAssistant(args: GetAssistantCommandInput, options?: __HttpHandlerOptions): Promise<GetAssistantCommandOutput>;
    getAssistant(args: GetAssistantCommandInput, cb: (err: any, data?: GetAssistantCommandOutput) => void): void;
    getAssistant(args: GetAssistantCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssistantCommandOutput) => void): void;
        getAssistantAssociation(args: GetAssistantAssociationCommandInput, options?: __HttpHandlerOptions): Promise<GetAssistantAssociationCommandOutput>;
    getAssistantAssociation(args: GetAssistantAssociationCommandInput, cb: (err: any, data?: GetAssistantAssociationCommandOutput) => void): void;
    getAssistantAssociation(args: GetAssistantAssociationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAssistantAssociationCommandOutput) => void): void;
        getContent(args: GetContentCommandInput, options?: __HttpHandlerOptions): Promise<GetContentCommandOutput>;
    getContent(args: GetContentCommandInput, cb: (err: any, data?: GetContentCommandOutput) => void): void;
    getContent(args: GetContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContentCommandOutput) => void): void;
        getContentSummary(args: GetContentSummaryCommandInput, options?: __HttpHandlerOptions): Promise<GetContentSummaryCommandOutput>;
    getContentSummary(args: GetContentSummaryCommandInput, cb: (err: any, data?: GetContentSummaryCommandOutput) => void): void;
    getContentSummary(args: GetContentSummaryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetContentSummaryCommandOutput) => void): void;
        getKnowledgeBase(args: GetKnowledgeBaseCommandInput, options?: __HttpHandlerOptions): Promise<GetKnowledgeBaseCommandOutput>;
    getKnowledgeBase(args: GetKnowledgeBaseCommandInput, cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void): void;
    getKnowledgeBase(args: GetKnowledgeBaseCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void): void;
        getRecommendations(args: GetRecommendationsCommandInput, options?: __HttpHandlerOptions): Promise<GetRecommendationsCommandOutput>;
    getRecommendations(args: GetRecommendationsCommandInput, cb: (err: any, data?: GetRecommendationsCommandOutput) => void): void;
    getRecommendations(args: GetRecommendationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetRecommendationsCommandOutput) => void): void;
        getSession(args: GetSessionCommandInput, options?: __HttpHandlerOptions): Promise<GetSessionCommandOutput>;
    getSession(args: GetSessionCommandInput, cb: (err: any, data?: GetSessionCommandOutput) => void): void;
    getSession(args: GetSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetSessionCommandOutput) => void): void;
        listAssistantAssociations(args: ListAssistantAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssistantAssociationsCommandOutput>;
    listAssistantAssociations(args: ListAssistantAssociationsCommandInput, cb: (err: any, data?: ListAssistantAssociationsCommandOutput) => void): void;
    listAssistantAssociations(args: ListAssistantAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssistantAssociationsCommandOutput) => void): void;
        listAssistants(args: ListAssistantsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssistantsCommandOutput>;
    listAssistants(args: ListAssistantsCommandInput, cb: (err: any, data?: ListAssistantsCommandOutput) => void): void;
    listAssistants(args: ListAssistantsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssistantsCommandOutput) => void): void;
        listContents(args: ListContentsCommandInput, options?: __HttpHandlerOptions): Promise<ListContentsCommandOutput>;
    listContents(args: ListContentsCommandInput, cb: (err: any, data?: ListContentsCommandOutput) => void): void;
    listContents(args: ListContentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListContentsCommandOutput) => void): void;
        listKnowledgeBases(args: ListKnowledgeBasesCommandInput, options?: __HttpHandlerOptions): Promise<ListKnowledgeBasesCommandOutput>;
    listKnowledgeBases(args: ListKnowledgeBasesCommandInput, cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void): void;
    listKnowledgeBases(args: ListKnowledgeBasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void): void;
        listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
        notifyRecommendationsReceived(args: NotifyRecommendationsReceivedCommandInput, options?: __HttpHandlerOptions): Promise<NotifyRecommendationsReceivedCommandOutput>;
    notifyRecommendationsReceived(args: NotifyRecommendationsReceivedCommandInput, cb: (err: any, data?: NotifyRecommendationsReceivedCommandOutput) => void): void;
    notifyRecommendationsReceived(args: NotifyRecommendationsReceivedCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: NotifyRecommendationsReceivedCommandOutput) => void): void;
        putFeedback(args: PutFeedbackCommandInput, options?: __HttpHandlerOptions): Promise<PutFeedbackCommandOutput>;
    putFeedback(args: PutFeedbackCommandInput, cb: (err: any, data?: PutFeedbackCommandOutput) => void): void;
    putFeedback(args: PutFeedbackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutFeedbackCommandOutput) => void): void;
        queryAssistant(args: QueryAssistantCommandInput, options?: __HttpHandlerOptions): Promise<QueryAssistantCommandOutput>;
    queryAssistant(args: QueryAssistantCommandInput, cb: (err: any, data?: QueryAssistantCommandOutput) => void): void;
    queryAssistant(args: QueryAssistantCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: QueryAssistantCommandOutput) => void): void;
        removeKnowledgeBaseTemplateUri(args: RemoveKnowledgeBaseTemplateUriCommandInput, options?: __HttpHandlerOptions): Promise<RemoveKnowledgeBaseTemplateUriCommandOutput>;
    removeKnowledgeBaseTemplateUri(args: RemoveKnowledgeBaseTemplateUriCommandInput, cb: (err: any, data?: RemoveKnowledgeBaseTemplateUriCommandOutput) => void): void;
    removeKnowledgeBaseTemplateUri(args: RemoveKnowledgeBaseTemplateUriCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveKnowledgeBaseTemplateUriCommandOutput) => void): void;
        searchContent(args: SearchContentCommandInput, options?: __HttpHandlerOptions): Promise<SearchContentCommandOutput>;
    searchContent(args: SearchContentCommandInput, cb: (err: any, data?: SearchContentCommandOutput) => void): void;
    searchContent(args: SearchContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchContentCommandOutput) => void): void;
        searchSessions(args: SearchSessionsCommandInput, options?: __HttpHandlerOptions): Promise<SearchSessionsCommandOutput>;
    searchSessions(args: SearchSessionsCommandInput, cb: (err: any, data?: SearchSessionsCommandOutput) => void): void;
    searchSessions(args: SearchSessionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SearchSessionsCommandOutput) => void): void;
        startContentUpload(args: StartContentUploadCommandInput, options?: __HttpHandlerOptions): Promise<StartContentUploadCommandOutput>;
    startContentUpload(args: StartContentUploadCommandInput, cb: (err: any, data?: StartContentUploadCommandOutput) => void): void;
    startContentUpload(args: StartContentUploadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartContentUploadCommandOutput) => void): void;
        tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
        untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
        updateContent(args: UpdateContentCommandInput, options?: __HttpHandlerOptions): Promise<UpdateContentCommandOutput>;
    updateContent(args: UpdateContentCommandInput, cb: (err: any, data?: UpdateContentCommandOutput) => void): void;
    updateContent(args: UpdateContentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateContentCommandOutput) => void): void;
    